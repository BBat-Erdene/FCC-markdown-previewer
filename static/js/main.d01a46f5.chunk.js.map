{"version":3,"sources":["components/Toolbar.jsx","components/Editor.jsx","components/Previewer.jsx","App.js","files/markdown-default.js","index.js"],"names":["Toolbar","props","className","children","onClick","setMaximized","isMaximized","Editor","style","editorMaximized","height","setEditorMaximized","id","defaultValue","text","onChange","e","setText","target","value","Previewer","previewerMaximized","setPreviewerMaximized","dangerouslySetInnerHTML","__html","marked","App","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAGaA,EAAU,SAACC,GACtB,OACE,sBAAKC,UAAU,kFAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,yBAC1B,sBAAMA,UAAU,sCAAhB,SAAuDD,EAAME,WAC7D,sBACED,UAAU,yEACVE,QAAS,kBAAMH,EAAMI,cAAcJ,EAAMK,cAF3C,SAGGL,EAAMK,YAAc,cAAC,IAAD,IAAoB,cAAC,IAAD,UCRpCC,EAAS,SAACN,GACrB,OACE,sBAAKC,UAAU,iCAAiCM,MAAOP,EAAMQ,gBAAkB,CAACC,OAAQ,QAAU,GAAlG,UACE,cAAC,EAAD,CACEJ,YAAaL,EAAMQ,gBACnBJ,aAAcJ,EAAMU,mBAFtB,oBAGA,0BACEC,GAAG,SACHV,UAAU,4FACVW,aAAcZ,EAAMa,KACpBC,SAAU,SAACC,GAAD,OAAOf,EAAMgB,QAAQD,EAAEE,OAAOC,c,gBCTnCC,EAAY,SAACnB,GACxB,OACE,sBAAKC,UAAU,mCAAf,UACA,cAAC,EAAD,CACEI,YAAaL,EAAMoB,mBACnBhB,aAAcJ,EAAMqB,sBAFtB,uBAGE,qBACEV,GAAG,UACHV,UAAU,0FACVqB,wBAA0B,CAACC,OAAQC,IAAOxB,EAAMa,aCgBzCY,MAxBf,WAAgB,IAAD,EACWC,mBCNE,4pCDKb,mBACNb,EADM,KACAG,EADA,OAEiCU,oBAAS,GAF1C,mBAENlB,EAFM,KAEWE,EAFX,OAGuCgB,oBAAS,GAHhD,mBAGNN,EAHM,KAGcC,EAHd,KAKb,OACE,sBAAKpB,UAAU,mBAAf,UACImB,EAAqB,GACrB,cAAC,EAAD,CACEP,KAAMA,EACNG,QAASA,EACTR,gBAAiBA,EACjBE,mBAAoB,kBAAMA,GAAoBF,MAEhDA,EAAkB,GAClB,cAAC,EAAD,CACEK,KAAMA,EACNO,mBAAoBA,EACpBC,sBAAuB,kBAAMA,GAAuBD,UElB9DO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d01a46f5.chunk.js","sourcesContent":["import React from 'react'\nimport { FaFreeCodeCamp, FaCompress, FaCompressAlt } from 'react-icons/fa'\n\nexport const Toolbar = (props) => {\n  return (\n    <div className=\"bg-scooter border-t border-l border-r border-b shadow-2xl-trl flex items-center\">\n      <FaFreeCodeCamp className=\"inline text-4xl pl-2\"/>\n      <span className=\"pl-2 font-semibold font-mono inline\">{props.children}</span>\n      <span\n        className=\"justify-self-end ml-auto mr-3 pb-1 cursor-pointer hover:text-turquoise\"\n        onClick={() => props.setMaximized(!props.isMaximized)}>\n        {props.isMaximized ? <FaCompressAlt /> : <FaCompress />}\n      </span>\n    </div>\n  )\n}","import React from 'react'\nimport { Toolbar } from './Toolbar'\n\nexport const Editor = (props) => {\n  return (\n    <div className=\"mx-auto w-4/12 h-80 mt-6 mb-20\" style={props.editorMaximized ? {height: '90vh'} : {}}>\n      <Toolbar\n        isMaximized={props.editorMaximized}\n        setMaximized={props.setEditorMaximized}>Editor</Toolbar>\n      <textarea\n        id=\"editor\"\n        className=\"bg-iceberg p-2 pb-4 min-w-full h-full border-b border-r border-l shadow-2xl-lrb font-mono\"\n        defaultValue={props.text}\n        onChange={(e) => props.setText(e.target.value)}>\n      </textarea>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Toolbar } from './Toolbar'\nimport marked from 'marked';\n\nexport const Previewer = (props) => {\n  return (\n    <div className=\"mx-auto w-6/12 h-full mb-10 mt-5\">\n    <Toolbar\n      isMaximized={props.previewerMaximized}\n      setMaximized={props.setPreviewerMaximized}>Previewer</Toolbar>\n      <div\n        id=\"preview\"\n        className=\"bg-iceberg p-3 pb-4 min-w-full border-b border-r border-l shadow-2xl-lrb prose prose-sm\"\n        dangerouslySetInnerHTML={ {__html: marked(props.text)} }>\n      </div>\n    </div>\n  )\n}\n\n","import { useState } from \"react\";\nimport { Editor } from \"./components/Editor\";\nimport { Previewer } from \"./components/Previewer\";\nimport { defaultMarkdown } from './files/markdown-default'\n\nfunction App() {\n  const [text, setText] = useState(defaultMarkdown)\n  const [editorMaximized, setEditorMaximized] = useState(false)\n  const [previewerMaximized, setPreviewerMaximized] = useState(false)\n\n  return (\n    <div className=\"App min-h-screen\">\n      { previewerMaximized ? '' :\n        <Editor\n          text={text}\n          setText={setText}\n          editorMaximized={editorMaximized}\n          setEditorMaximized={() => setEditorMaximized(!editorMaximized)}/>\n      }\n      { editorMaximized ? '' :\n        <Previewer\n          text={text}\n          previewerMaximized={previewerMaximized}\n          setPreviewerMaximized={() => setPreviewerMaximized(!previewerMaximized)}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","export const defaultMarkdown = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n\n`\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}